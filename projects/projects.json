[
  {
    "path": "projects/2022/100383017/",
    "title": "Country Convergence",
    "description": "This project enables the user to recreate a specific graph in OurWorldinData on GDP per capita layer by layer. It also introduces two alternative representations resorting to the same data.",
    "author": [
      {
        "name": "Nacho Pulido Ruiz",
        "url": {}
      }
    ],
    "date": "2023-01-03",
    "categories": [
      "2022"
    ],
    "contents": "\r\n\r\nContents\r\nOn the topic of Economics and Country Convergence\r\nGraph enhancement:\r\nAlternative representation 1\r\nAlternative representation 2\r\n\r\nOn the topic of Economics and Country Convergence\r\nOur aim will be to resort to visual tools in R studio and ggplot to study the topic of country economic growth and convergence. Classical Solow-Swan models of growth predict convergence as a function of the deviation of a country from its stationary state (natural level) such that we should expect convergence between LEDC´S and MEDC´s. Our point of departure will be to launch the libraries we will use and to obtain the data from the Maddison Project Database.\r\nOriginal plot:\r\n{.external}\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(scales)\r\ngdp <- as.data.frame(read_delim(\"gdp per capita.csv\", \r\n                                delim = \";\"))\r\n\r\n\r\n\r\n\r\nA prior step to develop our plot will be to clean and sort the data to prepare it for our ggplot() operations. We will filter for rows containing data for 1950 and 2016 and reshape the data to have two columns accounting for GDP per capita for each country and for each year. This enables the analyst to depict a different axis for each of the years containing observations on GDP per capita.\r\n\r\n\r\ngdp <- gdp %>% \r\n  rename(gdp_capita = gdp_per_capita) %>% \r\n  select(country, year,gdp_capita, ) %>% \r\n  filter(year %in% c(1950,2016)) %>% \r\n  pivot_wider(names_from = \"year\", values_from = gdp_capita) %>% \r\n  drop_na(\"1950\", \"2016\") %>% \r\n  rename(gdp_capita_1950 = \"1950\", gdp_capita_2016 = \"2016\")\r\n\r\n\r\nIt will be useful for us to categorize our countries in three groups (poor, medium and rich countries) by generating a factor column using the ifelse() command in the following way:\r\n\r\n\r\ngdp <- gdp %>% \r\n  mutate(type = ifelse(gdp_capita_2016<6000,\r\n                       \"poor\",\r\n                       ifelse(gdp_capita_2016<40000,\r\n                              \"medium\",\r\n                              \"rich\")))\r\n\r\n\r\nIt will be convenient for later (at the labelling stage) to generate a new column indicating the amount of growth an economy has undergone.\r\n\r\n\r\ngdp <- gdp %>% \r\nmutate(fold = round(gdp_capita_2016/gdp_capita_1950,1)) %>%\r\n  mutate(fold = paste(fold,\"-fold\"))\r\n\r\n\r\nSince we will have many observations for each of the countries (especially for those with middle income), we will filter for a subset of the data by selecting a random sample of middle income countries and then binding the resulting dataframe to the original one:\r\n\r\n\r\nsubset <- gdp %>% \r\n    filter(type == \"medium\") %>% \r\n  slice(sample(1:73,35,replace = FALSE))\r\ngdp <- gdp %>% \r\n    filter(type != \"medium\") %>% \r\n    rbind(subset)\r\n\r\n\r\nNow we have everything we need to start depicting our graph! We will call our gdp data and pipe it into the ggplot() function, defining the aesthetics desired. The advantage of having previously pivoted our data is that now we have 2 columns which account for the desired variables to be plotted:\r\n\r\n\r\nplot <- gdp %>% \r\n  ggplot()+\r\n  aes(gdp_capita_1950,gdp_capita_2016)\r\nplot\r\n\r\n\r\n\r\nNow we will add some geometry to our plot. We will choose shape 21 in order to be able to fill the points with a different color from the one we will use for the contouring of it.\r\n\r\n\r\nplot <- plot +\r\n  geom_point(shape = 21,color = \"red\", size = 1.5, fill = \"aquamarine3\")\r\nplot\r\n\r\n\r\n\r\nOur plot requires a lot of labels inside the graph, both for lines and for points. We will take advantage of geom_text() and add some label to the geometry including a subheading accounting for the amount of growth each economy has undergone. We will later work on our annotations to the diagonal lines.\r\n\r\n\r\nplot <- plot +\r\ngeom_text(aes(label = country), size = 1, nudge_y = -0.02)+\r\n    geom_text(aes(label = fold), size = 1, nudge_y = -0.05)\r\nplot\r\n\r\n\r\n\r\nIt is time to choose appropriately the scales of our plot. A logarithmic scale will we used for both axis and we will have to introduce the dollar symbol to account for the unit of measurement. The breaks have to be manually provided by the analyst to mimic as much as possible the original plot.\r\n\r\n\r\nplot <- plot +\r\n   scale_x_log10(label = label_number(prefix = \"$\"), \r\n                 breaks = c(400,500,700,1000,1500,2000,3000,4000,5000,\r\n                            7000,10000,15000,20000,30000,40000,50000,70000))+\r\n   \r\n  scale_y_log10(label = label_number(prefix = \"$\"),\r\n                breaks = c(400,500,700,1000,1500,2000,3000,4000,5000,\r\n                           7000,10000,15000,20000,30000,40000,70000))\r\nplot\r\n\r\n\r\n\r\nTo stick with the original plot as much as possible, we will introduce some text in our axis and title (including a subtitle) and use a bold font for the latter.\r\n\r\n\r\nplot <- plot +\r\n  labs(x=\"GDP per capita in 1950\",\r\n       y = \"GDP per capita in 2016\",\r\n       title = \"GDP per capita in 1950 and 2016\",\r\n       subtitle = \"GDP per capita is expressed in international -$. This means that it is adjusted for price changes over time (inflation) and for price differences between countries.\")\r\nplot\r\n\r\n\r\n\r\nThere are many informative lines in our plot used to depict the growth rate of a country in comparison to 1950.. We will use the geom_abline() to choose the slope and intercept of each one and change the color to stick to the original plot. The RGB technique will be used to determine the color of interest and the fourth argument of this function refers to the transparency (alpha), which we will set for the diagonal lines. The intercepts with the y-axis have to be transformed by the logarithm.\r\n\r\n\r\nplot <- plot +\r\ngeom_abline(slope = 1,intercept = 0, color = \"darkblue\")+\r\n    geom_abline(slope=1,\r\n                intercept=log10(c(0.5, 2, 3,\r\n                                  4.4, 10, 15, 30)), linetype=\"dotted\",\r\n                color = rgb(0,0,0.5,0.3))\r\nplot\r\n\r\n\r\n\r\nIn this section we will work on the theme (appearance of the plot). Notice that each of the axis has some specific color associated with it (in accordance with the horizontal and vertical grid lines). In this case, the background lines are faded and we will resort to the RGB mixture of colors providing an alpha for each color. These kind of lines will be chosen as linetype “dotted to achieve the desired dashed effect. The aspect.ratio will be set to 1 inside the theme to ensure that the proportions of the final plot obey the ones of the original graph.\r\n\r\n\r\nplot <- plot +\r\ntheme(axis.text.x = element_text(colour = \"darkorchid3\", size = 2.9),\r\n      axis.title.x = element_text(colour = \"darkorchid3\", size = 9,family = \"serif\"),\r\n      axis.text.y = element_text(colour = \"cyan3\", size = 4,family = \"serif\"),\r\n      axis.title.y = element_text(colour = \"cyan3\", size = 9, family = \"serif\"),\r\n      plot.subtitle = element_text(size = 5, colour = rgb(0,0,0,0.6),hjust = 0.4, vjust = 5,family = \"serif\"),\r\n        panel.background = element_rect(fill = \"white\"),\r\n        panel.grid.major.x = element_line(color = rgb(0.6,0.196,0.8,0.4),linetype = \"dotted\"),\r\n        panel.grid.major.y = element_line(color = rgb(0,1,1,0.4), linetype = \"dotted\"),\r\n        plot.title = element_text(size = 14,hjust = -0.2, vjust = 1, family = \"serif\"),\r\n        aspect.ratio = 1)\r\nplot\r\n\r\n\r\n\r\nCoordinates will be kept ass Cartesian but we will employ the use of some limits to mimic the ones from the original plot.\r\n\r\n\r\nplot <- plot +\r\ncoord_cartesian(xlim = c(400,70000), ylim = c(400,70000))\r\nplot\r\n\r\n\r\n\r\nWe will now work on the annotations accompanying the vertical lines which will indicate the amount of growth that each of the countries have experienced since 1950, thus, conveying the idea of convergence/divergence among them.\r\n\r\n\r\nplot <- plot +\r\nannotate(\"text\", label = \"Countries above this line had positive growth\", color = \"darkgreen\", x = 22000, y = 25000, angle = 45, size = 2.3,family = \"serif\")+\r\n    annotate(\"text\", label = \"Countries below this line had negative growth\", color = \"red\", x = 26000, y = 23000, angle = 45, size = 2.3,family = \"serif\")\r\nplot\r\n\r\n\r\n\r\nIn addition to these annotations, we will add the final text annotations pertaining to the rest of diagonal lines adding a smaller size and accounting them with a different color. The 45 degree angle will be held constant since all lines hold a slope equal to unity but with different intercepts.\r\n\r\n\r\nplot<- plot+\r\n  annotate(\"text\", label = \"2x poorer\", color = rgb(0,0,0.6,1), x = 61000, y = 36000, angle = 45, size = 1.7,family = \"serif\")+\r\n    annotate(\"text\", label = \"2x richer\", color = rgb(0,0,0.6,1), x = 30000, y = 65000, angle = 45, size = 1.7,family = \"serif\")+\r\n    annotate(\"text\", label = \"3x richer\", color = rgb(0,0,0.6,1), x = 19000, y = 65000, angle = 45, size = 1.9,family = \"serif\")+\r\n    annotate(\"text\", label = \"Global average \\n growth (4.4x)\", color = rgb(0,0,0.6,1),  x = 11000, y = 63000, angle = 45, size = 1.9,family = \"serif\")+\r\n    annotate(\"text\", label = \"10x richer\", color = rgb(0,0,0.6,1), x = 5700, y = 67000, angle = 45, size = 1.9,family = \"serif\")+\r\n    annotate(\"text\", label = \"15x richer\", color = rgb(0,0,0.6,1), x = 4000, y = 68000, angle = 45, size = 1.9,family = \"serif\")+\r\n    annotate(\"text\", label = \"30x richer\", color = rgb(0,0,0.6,1), x = 2000, y = 68000, angle = 45, size = 1.9,family = \"serif\")\r\nplot\r\n\r\n\r\n\r\nAs a final note, we will recall all the problems we encounter on this plot and use this to propose an enhancement:\r\nEven with a subset of countries, there is a lot of geometry text overlapping -> We will improve the labelling\r\nIt is difficult to account for convergence across countries since all countries are plotted independent of their nature -> We will distinguish between groups of countries\r\nIn order to enable the reader extract information on both the country and the level of growth rate, we will provide to distinctive plots such that one contains country labels whereas the other one will resort to quantitative (regression analysis) information\r\nConvergence is difficult to observe due to axis selection -> We will modify the vertical axis to depict growth rate and help the reader check for convergence with ease\r\nGraph enhancement:\r\nWe will use the same graph to propose some enhancements or changes in the way the data is presented in an attempt to ease reader´s comprehension. We will reload the data to our Rstudio code:\r\n\r\n\r\ngdp <- as.data.frame(read_delim(\"gdp per capita.csv\", \r\n                                  delim = \";\"))\r\n\r\n\r\nThe same technique employed before to clean and prepare our data will be recycled. Recall we are just proposing an improvement of the visualization, an alternative graph will be proposed in the last section of the project. Once again, we categorize our countries into rich, medium and poor:\r\n\r\n\r\ngdp <- gdp %>%\r\n    rename(gdp_capita = gdp_per_capita) %>%\r\n    select(country, year,gdp_capita, ) %>%\r\n    filter(year %in% c(1950,2016)) %>%\r\n    pivot_wider(names_from = \"year\", values_from = gdp_capita) %>%\r\n    drop_na(\"1950\", \"2016\") %>%\r\n    rename(gdp_capita_1950 = \"1950\", gdp_capita_2016 = \"2016\") %>%\r\n    mutate(type = ifelse(gdp_capita_2016<6000,\r\n                         \"Poor\",\r\n                         ifelse(gdp_capita_2016<30000,\r\n                                \"Medium\",\r\n                                \"Rich\")))\r\n\r\n\r\nThe main difference with the first plot is that, this time, we will resort to the inclusion of a new column which will summarize the average annual growth rate that each economy has undergone since 1950.\r\n\r\n\r\ngdp <- gdp %>% \r\n mutate(Growth = (((gdp_capita_2016/gdp_capita_1950)^(1/(2016-1950)))-1)*100)%>%\r\n    mutate(type = factor(type, levels = c(\"Poor\",\r\n                                          \"Medium\",\r\n                                          \"Rich\")))\r\n\r\n\r\nAs we mentioned previously, the plot will be the same but we will just change the way the data is presented, so the random filter to select countries will be preserved:\r\n\r\n\r\nsubset <- gdp %>% \r\n    filter(type == \"medium\") %>% \r\n    slice(sample(1:73,35,replace = FALSE))\r\n  gdp <- gdp %>% \r\n    filter(type != \"medium\") %>% \r\n    rbind(subset)\r\n\r\n\r\nWe can begin with our enhanced graph! The aesthetics provided now will be set to the gdp per capita in 1950 and the annual growth rate we computed before. We will make use of our geom_label() again but we will omit supplying R with geom_point() this time. The color of the text will be set to white in order to generate a comfortable contrast with the “filling” by type of economy we had established in our aesthetics.\r\n\r\n\r\nlibrary(ggrepel)\r\nplot_1 <-gdp %>%\r\n    ggplot()+\r\n    aes(gdp_capita_1950,Growth, fill = type)+\r\n    geom_label_repel(aes(label = country), size = 2, segment.color = 'transparent', max.overlaps = 40,\r\n                     force = 1, color = \"white\",\r\n                     show.legend = FALSE)\r\n    plot_1\r\n\r\n\r\n\r\nWe will add some labels to our axis and set the title to convey the idea that we are working with convergence. The word “conditional” here refers to the fact that we are going one step further and categorizing our data between types of economies and we will finally visualize the concept of “conditional convergence” presented in the classical Solow model of growth.\r\n\r\n\r\nplot_1 <- plot_1 +\r\nlabs(x=\"GDP per capita in 1950\",\r\n         y = \"Average GDP Growth Rate\")\r\nplot_1\r\n\r\n\r\n\r\nWe will provide a continuous y scale with the percentage suffix to make it obvious that we are working with growth rates here. We will also begin by applying a minimal theme to our plot which will be modified later with slight changes.\r\n\r\n\r\nplot_1 <-\r\nplot_1 + theme_minimal()+\r\n    scale_y_continuous(label = label_number(suffix = \"%\"), n.breaks = 6)\r\n    plot_1\r\n\r\n\r\n\r\nWe will work on the themes by providing some font in the type of “serif” and eliminating any background grid which may distract the reader. We will not devote much effort into changing the theme appearance because we are just modifying some changes of the original plot, not changing the graph completely. The aspect ratio will be set again to 1 to keep the original proportions.\r\n\r\n\r\nplot_1 <- plot_1 +\r\ntheme(axis.text.x = element_text( size = 7),\r\n          axis.title.x = element_text( size = 12,family = \"serif\"),\r\n          axis.text.y = element_text(size = 7,family = \"serif\"),\r\n          axis.title.y = element_text( size = 12, family = \"serif\"),\r\n          panel.background = element_rect(fill = \"grey\"),\r\n          panel.grid = element_blank(),\r\n          plot.title = element_blank(),\r\n          aspect.ratio = 1)\r\nplot_1\r\n\r\n\r\n\r\nFinally, let´s change the limits on the plot to make it more readable by modifying the arguments of the coordinate system:\r\n\r\n\r\nplot_1 <- plot_1+\r\n  coord_cartesian(xlim = c(0,10000), ylim = c(-2,7))\r\nplot_1\r\n\r\n\r\n\r\nNow we will generate the second plot required for our enhancement resorting to a similar analyis as the one depicted above but focusing on the quantitative side. We will append next to plot_1 the corresponding representation of each linear regression accounting for our three country groups. As usual, we will have to read again our data to make from scratch the desirable transformations:\r\n\r\n\r\ngdp <- as.data.frame(read_delim(\"gdp per capita.csv\",\r\n                                  delim = \";\"))\r\n\r\n\r\nOne again, we will have to split our country in three categories and generate our “Growth” column accounting for the rate of increase of GDP per capita that each economy experiences. Factor levels will be reset to obtain the desired order:\r\n\r\n\r\ngdp <- gdp %>%\r\n    rename(gdp_capita = gdp_per_capita) %>%\r\n    select(country, year,gdp_capita, ) %>%\r\n    filter(year %in% c(1950,2016)) %>%\r\n    pivot_wider(names_from = \"year\", values_from = gdp_capita) %>%\r\n    drop_na(\"1950\", \"2016\") %>%\r\n    rename(gdp_capita_1950 = \"1950\", gdp_capita_2016 = \"2016\") %>%\r\n    mutate(type = ifelse(gdp_capita_2016<6000,\r\n                         \"Poor\",\r\n                         ifelse(gdp_capita_2016<30000,\r\n                                \"Medium\",\r\n                                \"Rich\"))) %>%\r\n    mutate(Growth = (((gdp_capita_2016/gdp_capita_1950)^(1/(2016-1950)))-1)*100) %>%\r\n    mutate(type = factor(type, levels = c(\"Poor\",\r\n                                          \"Medium\",\r\n                                          \"Rich\")))\r\n\r\n\r\nNow we can start depicting the second part of our enhancement graph! The first part will consist of piping our already filtered data into ggplot() and select the appropriate aesthetics in which we will feed our argument “fill” with our country type.\r\n\r\n\r\nplot_2 <-  gdp %>%\r\n    ggplot()+\r\n    aes(gdp_capita_1950,Growth, fill = type)\r\nplot_2\r\n\r\n\r\n\r\nNotice that, different to plot_1 in which we mapped a text geometry into the plot to be able to spot each of the countries, our task now is to account for types of countries regardless of their label. Therefore, we will change the geometry to geom_point() and let the point be filled with the type of country while contouring it with a white color:\r\n\r\n\r\nplot_2 <- plot_2 +\r\ngeom_point(shape = 21, color = \"white\", size = 3)\r\nplot_2\r\n\r\n\r\n\r\nWe will add some labels to the axis (the same that we had for our previous plot):\r\n\r\n\r\nplot_2 <- plot_2 +\r\n labs(x=\"GDP per capita in 1950\",\r\n         y = \"Average GDP Growth Rate\")\r\nplot_2\r\n\r\n\r\n\r\nLet´s change the label of the vertical axis by adding a percentage symbol to indicate that it is a measure of percentage growth rate. This has been computed as the average annual growth rate, which is the growth rate required for a country to portray year by year (constant) to achieve the final level of GDP per capita:\r\n\r\n\r\nplot_2 <- plot_2+\r\nscale_y_continuous(label = label_number(suffix = \"%\"), n.breaks = 6)+\r\n  theme_minimal()\r\nplot_2\r\n\r\n\r\n\r\nNext, we will change the appearance of our plot by modifying slightly the theme layout. Family “serif” will be chosen for the font in order to mimic the one used in the replication of the original plot and the background will be fill with grey. Panel grid lanes will be removed by setting the corresponding argument into element_blank().\r\n\r\n\r\nplot_2 <- plot_2 +\r\ntheme(axis.text.x = element_text( size = 7),\r\n          axis.title.x = element_text( size = 12,family = \"serif\"),\r\n          axis.text.y = element_text(size = 7,family = \"serif\"),\r\n          axis.title.y = element_text( size = 12, family = \"serif\"),\r\n          panel.background = element_rect(fill = \"grey\"),\r\n          panel.grid= element_blank(),\r\n          legend.position = \"bottom\",\r\n          legend.background = element_rect(size = 2),\r\n          aspect.ratio = 1)\r\nplot_2\r\n\r\n\r\n\r\nFinally, a linear regression line will be passed through each of the country groups to account for conditional convergence. The negative relationship which can be easily spotted once the line of best fit is included shows that, within groups of similar countries holding similar characteristics (depreciation rates, population growth rates etc.), there is convergence. However, the transition of a country from one group to another one is rarely seen.\r\n\r\n\r\nplot_2 <- plot_2 +\r\ngeom_smooth(method = \"lm\", size = 1, color = rgb(1,1,1,0.3))\r\nplot_2\r\n\r\n\r\n\r\nWe will change some limits of this plot to enable the reader focus on the inside and not get distracted with a hughe portion of unused plot:\r\n\r\n\r\nplot_2 <- plot_2 +\r\n coord_cartesian(xlim = c(0,15000), ylim = c(-2,7))\r\nplot_2\r\n\r\n\r\n\r\n\r\n\r\nlibrary(ggpubr)\r\nenhancement <- ggarrange(plot_1,plot_2,  common.legend = TRUE, legend=\"bottom\")\r\nannotate_figure(enhancement,\r\n                top = text_grob(\"Gdp per Capita Conditional Convergence\",\r\n            color = \"red\", size = 19))\r\n\r\n\r\n\r\nAlternative representation 1\r\nNow that we have resorted to an enhancement of the original plot in order to provide a measure of within group convergence, we will propose an alternative graphical analysis to show between group divergence. In other words, we will see, for each year, how the distribution of income holds for each of our country groups to highlight the difficulty of an economy of jumping from one group to another one.\r\nWe will have to read again the data to start from scratch our alternative plot:\r\n\r\n\r\ngdp <- as.data.frame(read_delim(\"gdp per capita.csv\",\r\n                                  delim = \";\"))\r\n\r\n\r\nWe will only keep data from 1950 onwards and we will filter for any NA´s present (missing observations). The difference with our previous plots is that we will now use all of our economies (no filter selection) and we will plot, for each year, how income per capita is distributed among our countries (the evolution of distribution of wealth).\r\n\r\n\r\ngdp <- gdp %>%\r\n    select(country,year,gdp_per_capita) %>%\r\n    filter(year>=1950) %>%\r\n    drop_na(gdp_per_capita)\r\n\r\n\r\nWe will pivot our data into wide format because we desire a column indicating the GDP per capita and the corresponding year in order to enable the analyst to generate the new column assigning the type of economy (factor).\r\n\r\n\r\ngdp <- gdp %>% \r\npivot_wider(names_from = \"year\",\r\n                values_from = gdp_per_capita,\r\n                names_prefix = \"Year\") %>%\r\n    mutate(type = ifelse(Year2016<6000,\r\n                         \"Poor\",\r\n                         ifelse(Year2016<30000,\r\n                                \"Medium\",\r\n                                \"Rich\")))\r\n\r\n\r\nNow we will reshape our data back to long format for the sake of our alternative representation. This is a different route we are taking with respect to the original plots, but it will be useful for operating with all years and not just 2 specific ones (as earlier). We separate the pivoted columns to eliminate the unnecesary ones and keep just a year and a gdp per capita column:\r\n\r\n\r\ngdp <- gdp %>% \r\npivot_longer(starts_with(\"Year\"),\r\n                 names_to = \"Year\",\r\n                 values_to = \"gdp_per_capita\") %>%\r\n    separate(Year, c(\"Yeard\", \"Year\"), remove = TRUE, sep =4) %>%\r\n    select(-Yeard) %>%\r\n    drop_na(everything())\r\n\r\n\r\nFinally, we will reorder the levels of our factor for a more appealing representation of our faceting and we will generate a new dataframe which contains all information that our original dataset contained with the exception of country type. We do this because we will use both dataframes in our plot to work with the faceting.\r\n\r\n\r\ngdp <- gdp %>%\r\n   mutate(type = factor(type, levels = c(\"Poor\",\r\n                                         \"Medium\",\r\n                                         \"Rich\")))\r\n gdp_2 <-\r\n  gdp %>%\r\n  select(-type)\r\n\r\n\r\nWe pipe our gdp dataset into ggplot() and define our desired aesthetics:\r\n\r\n\r\nplot <-\r\ngdp %>%\r\n  ggplot()+\r\n    aes(Year,gdp_per_capita)\r\nplot\r\n\r\n\r\n\r\nNow we will add two geometries which correspond, in this case, to lines that account for the distribution of income per capita each year and for each economy. First we do this with the original data frame and then we mimic the code with the filtered dataframe and we add some alpha in order to achieve this effect in which the important segment of the data is being highlighted.\r\n\r\n\r\nplot<-\r\nplot+\r\ngeom_line(data = gdp_2, color = rgb(0,1,0,0.3))+\r\n  geom_line(color= rgb(0,1,0,1))\r\nplot\r\n\r\n\r\n\r\nNow we facet by type of economy…\r\n\r\n\r\nplot <- plot+\r\nfacet_wrap(~factor(type))\r\nplot\r\n\r\n\r\n\r\nLet´s add some labels to our plot. We will improve the readings of the axis and set a title to account for the divergence between countries. This is the case because we see that, although we did see within group (conditional) convergence in our enhancement plot, now one observes that, if we treat countries as a whole by groups, there is some divergence taking place.\r\n\r\n\r\nplot <-\r\n  plot+\r\nlabs(y = \"GDP per capita\", x = \"Time\",\r\n       title = \"Between Group Divergence\")\r\nplot\r\n\r\n\r\n\r\nOnce again, we work the scaling of our graph and change the label of the vertical axis to dollars. Timing will only display some years to avoid overlapping and improve readability.\r\n\r\n\r\nplot <- plot +\r\nscale_x_discrete(breaks = c(1950,1960,1970,1980,1990,2000,2010))+\r\n  scale_y_continuous(labels = label_dollar())\r\nplot\r\n\r\n\r\n\r\nThe final theme will be set now. We begin with a general dark theme and then make some final adjustments. Years in the horizontal axis will be given some angle to enable us to fit more information and the title will be set in the center of our plot. This will be our first proposal for an alternative representation.\r\n\r\n\r\nplot <- plot +\r\ntheme_dark()+\r\n  theme(axis.text.x = element_text(size = 10, angle = 90),\r\n        strip.text.x =element_text(face = \"bold\"),\r\n        plot.title = element_text(hjust = 0.5, size =14))\r\nplot\r\n\r\n\r\n\r\nAlternative representation 2\r\nOur previous plot operated with the distribution of income per capita within groups to be able to compare across our three types of economies (e.g. variance and overal growth). Our second proposal for alternative visualization will focus on the between-group convergence and reinforce the idea of the set of hardships involved in the process of an economy evolving from a lower class to a higher one. We load again our data to start from scratch, as usual:\r\n\r\n\r\ngdp <- as.data.frame(read_delim(\"gdp per capita.csv\",\r\n                                delim = \";\"))\r\n\r\n\r\nNext, we will have to perform similar operations we resorted to in previous sections by filtering only those years corresponding to 1950 and 2016 and arranging each country into its corresponding group.\r\n\r\n\r\ngdp <- gdp %>%\r\n  rename(gdp_capita = gdp_per_capita) %>%\r\n  select(country, year,gdp_capita, ) %>%\r\n  filter(year %in% c(1950,2016)) %>%\r\n  pivot_wider(names_from = \"year\", values_from = gdp_capita) %>%\r\n  drop_na(\"1950\", \"2016\") %>%\r\n  rename(gdp_capita_1950 = \"1950\", gdp_capita_2016 = \"2016\") %>%\r\n  mutate(Class = ifelse(gdp_capita_2016<6000,\r\n                       \"Poor\",\r\n                       ifelse(gdp_capita_2016<30000,\r\n                              \"Medium\",\r\n                              \"Rich\")))\r\n\r\n\r\nThe difference with previous plots is that we will now use the overall average annual growth rate from 1950 to 2016 which is the average growth an economy has yearly undergone to achieve their gdp per capita level in 2016. We also attach a measure of the mean average growth for each of our classes to enable the reader to spot the first differences:\r\n\r\n\r\ngdp <- gdp %>%\r\n  mutate(AAGR = ((gdp_capita_2016/gdp_capita_1950)^(1/(2016-1950))-1)*100)\r\ngdp %>%\r\n  group_by(Class) %>%\r\n  summarise(av_AAGR = mean(AAGR))\r\n\r\n# A tibble: 3 × 2\r\n  Class  av_AAGR\r\n  <chr>    <dbl>\r\n1 Medium   2.79 \r\n2 Poor     0.917\r\n3 Rich     3.27 \r\n\r\ngdp <- gdp %>%\r\n  filter(Class != \"Rich\") %>%\r\n  mutate(AAGR_diff = 3.26 - AAGR)\r\n\r\n\r\nWe can now start building our plot layer by layer. We pipe in our already filtered data into ggplot() and set the aesthetics such that the horizontal axis accounts for each of the economies and the vertical one measures the growth rate difference between each country and the average one for rich countries. Therefore, high figures for the vertical axis correspond to countries that need to inject a considerable amount of per capita growth rate (annually) in order to catch up with rich economies and viceversa. The argument introduced in geom_bar() will be set to identity because the default for a bar plot is to count th enumber of observations in a column, and we want to plot the column corresponding to the growth rate difference. Notice that we have reordered from lowest to highest to achieve a visually more attractive graph.\r\n\r\n\r\nplot <- gdp %>%\r\n  ggplot()+\r\n  aes(reorder(country,AAGR_diff), AAGR_diff, fill = Class)+\r\n  geom_bar(stat = \"identity\")\r\nplot\r\n\r\n\r\n\r\nNow we will set a void theme for our plot because we want to eliminate any axis text and clean the general appearance (we will work in the themes at the end) and add some labels for the acknowledge the reader with a better understanding of the plot:\r\n\r\n\r\nplot <- plot +\r\ntheme_void()+\r\n  labs(title = \"The Spiral of convergence\",\r\n       subtitle = \"Countries contained inside the white circle are already growing at the rate of a rich economy\",\r\n       caption =  \"Countries falling in the dark regions require an additional \\n annual average growth rate to catch up with leading economies\")\r\nplot\r\n\r\n\r\n\r\nNow its time to work on the appareance of our graph. The panel grid lines will be removed by setting an element_blank() argument and the aspect ratio will be set so that we can observe a wider spiral in the final graph. The colors chosen for the bar plots are green and purple which contrast among then whereas the background layers will be set in black as a final step:\r\n\r\n\r\nplot <- plot +\r\nscale_fill_discrete(type = c(\"purple\", \"green\"))+\r\n  theme(legend.background = element_rect(color = \"black\"),\r\n        plot.title = element_text(hjust = 0.5, vjust = 3, size =16),\r\n        panel.background = element_rect(fill = \"white\"),\r\n        panel.grid.major.x = element_blank(),\r\n        panel.grid.major.y = element_blank(),\r\n        aspect.ratio = 0.8,\r\n        plot.subtitle = element_text(size = 9,hjust = 0),\r\n        plot.caption = element_text(size = 9,hjust = 0),\r\n        legend.key = element_rect(color = \"white\", size = 2),\r\n        legend.key.width = unit(2,\"lines\"),\r\n        legend.title = element_text(hjust = 0.5))\r\nplot\r\n\r\n\r\n\r\nWe will have to add some annotations in our plot to point the amount of growth injection each economy needs. These lines and annotations will make more sense once the polar coordinates have been applied. We encourage the reader to come back to these steps after the plot is over to understand how each of our elements gets settled in the final spiral.\r\n\r\n\r\nplot <- plot +\r\ngeom_abline(slope = 0,\r\n            intercept = c(-2,-1,0,1,2,3,4),\r\n            color = rgb(0,0,0,0.3), linetype = \"dotted\")+\r\n  annotate(geom=\"text\", x=-10,\r\n           y=c(-2,-1,0,1,2,3,4), label=c(\"-2%\",\"-1%\",\"0%\",\"1%\",\"2%\",\"3%\",\"4%\"),\r\n           color=\"black\",size =3,angle = 28)\r\nplot\r\n\r\n\r\n\r\nFinally, we have to add some rectangular geometries for different segments of the plot which will be given some alpha (transparency) to account for best to worse layers. These layers mimic the level curves of a three dimensional bowl in which each layer projected in the floor corresponds to a circle. We will see this once we apply our polar coordinates.\r\n\r\n\r\nplot <- plot +\r\nannotate(\"rect\", ymin = -2, ymax = -1,\r\n         xmin = -10, xmax = 110, fill = \"black\", alpha = 0.1)+\r\n  annotate(\"rect\", ymin = -1, ymax = 0,\r\n           xmin = -10, xmax = 110, fill = \"black\", alpha = 0.2)+\r\n  annotate(\"rect\", ymin = 0, ymax = 1,\r\n           xmin = -10, xmax = 110, fill = \"black\", alpha = 0.3)+\r\n  annotate(\"rect\", ymin = 1, ymax = 2,\r\n           xmin = -10, xmax = 110, fill = \"black\", alpha = 0.4)+\r\n  annotate(\"rect\", ymin = 2, ymax = 3,\r\n           xmin = -10, xmax = 110, fill = \"black\", alpha = 0.5)+\r\n  annotate(\"rect\", ymin = 3, ymax = 4,\r\n           xmin = -10, xmax = 110, fill = \"black\", alpha = 0.6)\r\nplot\r\n\r\n\r\n\r\nWe can now apply our polar coordinates!\r\n\r\n\r\nplot <- plot +\r\ncoord_polar()\r\nplot\r\n\r\n\r\n\r\nThr first alternative representation deals with the evolution of the distribution of GDP per capita whereas the second one conveys this information in terms of differences in average growth rates with respet to rich economies. The results arising from the first section of the paper point at the existence of conditional convergence between similar economies and we highlight the difficulties an economy faces in jumping from one class to another in the outcome stemming from our alternative plots.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "projects/2022/100383017/100383017_files/figure-html5/unnamed-chunk-6-1.png",
    "last_modified": "2023-01-03T13:23:22+01:00",
    "input_file": "100383017.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "projects/gapminder/",
    "title": "Gapminder's World Health Chart",
    "description": "This tutorial reproduces one of the most popular data visualizations ever\nand serves as an example project for this course",
    "author": [
      {
        "name": "Iñaki Ucar",
        "url": {}
      }
    ],
    "date": "2022-09-09",
    "categories": [
      "gapminder"
    ],
    "contents": "\n\nContents\nGetting the data\nBuilding the chart\nCoordinates and axes\nTheme\nAnnotations\nData\nLegend\n\nFinal result\nSingle year\nMultiple years, static\nMultiple years, dynamic\n\n\nHans Rosling was a Swedish professor of International Health at the Karolinska Institute,\nand co-founder of the Gapminder Foundation,\nwhich developed the Trendalyzer software for animated data visualization.\nHis famous 2006 TED Talk,\nDebunking myths about the “third world”,\nhas inspired millions over the world thanks to his celebrated bubble chart\ndepicting the relationship between life expectancy and income.\nGapminder’s World Health Chart. Figure from gapminder.org.The goal of this tutorial is to replicate this famous data visualization step by step.\nGetting the data\nThe data consists of yearly observations of life expectancy values and GDP per capita for a number of countries in the world.\nThis is a very popular dataset.\nWe could download the data directly from the Gapminder homepage,\nbut we will use instead the gapminder package,\nwhich contains ready-to-use data for 142 countries from 1952 to 2007.\n\n\nlibrary(tidyverse)\nlibrary(gapminder)\n\n\nLet’s take a glimpse of the data:\n\n\nglimpse(gapminder)\n\nRows: 1,704\nColumns: 6\n$ country   <fct> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\nsummary(gapminder)\n\n        country        continent        year         lifeExp     \n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \n Algeria    :  12   Asia    :396   Median :1980   Median :60.71  \n Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  \n Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  \n Australia  :  12                  Max.   :2007   Max.   :82.60  \n (Other)    :1632                                                \n      pop              gdpPercap       \n Min.   :6.001e+04   Min.   :   241.2  \n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \n Median :7.024e+06   Median :  3531.8  \n Mean   :2.960e+07   Mean   :  7215.3  \n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \n Max.   :1.319e+09   Max.   :113523.1  \n                                       \n\nThese are all the variables we need in a tidy format,\nincluding population counts, which will serve to define the size of the bubbles.\nAs we can see, the original visualization includes Oceania into Asia,\nso let’s do the same for our exercise:\n\n\ngapminder <- gapminder %>%\n  mutate(continent = fct_other(continent, drop=\"Oceania\", other_level=\"Asia\"))\nsummary(gapminder)\n\n        country        continent        year         lifeExp     \n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \n Algeria    :  12   Europe  :360   Median :1980   Median :60.71  \n Angola     :  12   Asia    :420   Mean   :1980   Mean   :59.47  \n Argentina  :  12                  3rd Qu.:1993   3rd Qu.:70.85  \n Australia  :  12                  Max.   :2007   Max.   :82.60  \n (Other)    :1632                                                \n      pop              gdpPercap       \n Min.   :6.001e+04   Min.   :   241.2  \n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \n Median :7.024e+06   Median :  3531.8  \n Mean   :2.960e+07   Mean   :  7215.3  \n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \n Max.   :1.319e+09   Max.   :113523.1  \n                                       \n\nBuilding the chart\nCoordinates and axes\nWe will work with a single year for now.\nThe base panel consists of simple Cartesian coordinates,\nand depicts life expectancy vs. GDP per capita,\nalthough the x label says the more understandable term “Income”.\n\n\np <- ggplot(filter(gapminder, year == 2007)) +\n  aes(gdpPercap, lifeExp) +\n  ylab(\"Life expectancy\") + xlab(\"Income\")\np\n\n\n\nBoth axes have fixed limits across the whole animation.\nAnother thing to note about the axes is that income is in logarithmic scale with very specific breaks.\nAlso, numbers above 10 thousand are labeled as “10k”.\nThe function scales::label_number comes in handy for this.\nNote that we make some space for annotations on top of the chart\nby setting the maximum limit of the y axis to 95.\n\n\nbreaks <- 500*2^c(0:8)\nklabel <- scales::label_number(suffix=\"k\", scale=1e-3)\nlabels <- c(breaks[1:5], klabel(breaks[-(1:5)]))\n\np <- p + scale_y_continuous(limits=c(10, 95), breaks=seq(10, 90, 10)) +\n  scale_x_log10(limits=range(breaks), breaks=breaks, labels=labels)\np\n\n\n\nTheme\nNote that the theme is very similar to theme_classic, but shows the major grid.\nWe also instruct the theme to remove the legend,\nbecause we will add a custom one later on.\n\n\np <- p + theme_classic() +\n  theme(panel.grid.major=element_line(), legend.position=\"none\")\np\n\n\n\nAdditionally, we could continue to tinker with fonts and other parameters.\nAnnotations\nThe base panel depicts three annotations:\nA big background number indicating the year in the middle.\nFour income levels on the top part, whose breaks seem to be 3k, 8k and 24k.\nThe axes’ units on the top left and bottom right corners.\nFor the background number, we could use annotate with a fixed label,\nbut we will use geom_text instead, even if we overplot it many times,\nso that the year is read from the data.\n\n\np <- p + geom_text(aes(8000, 50, label=year), size=65, color=\"lightgray\")\np\n\n\n\nNext, we add the income levels.\nAdditionally, we will take the liberty of adding vertical lines to clearly demarcate the breaks.\n\n\ntlevel <- c(1300, 5000, 14000, 40000)\nblevel <- c(3000, 8000, 24000)\nilevel <- c(\"INCOME LEVEL 1\", \"LEVEL 2\", \"LEVEL 3\", \"LEVEL 4\")\n\np <- p + geom_vline(xintercept=blevel, color=\"darkgray\") +\n  annotate(\"text\", x=tlevel, y=95, color=\"darkgray\", vjust=0, size=3, label=ilevel) +\n  annotate(\"text\", x=blevel, y=95, color=\"darkgray\", vjust=0, size=5, label=\"◆\")\np\n\n\n\nFinally, let’s add the units to the axes.\n\n\np <- p +\n  annotate(\"text\", x=128000, y=10, hjust=0.95, vjust=1, size=3,\n           label=\"per person (GDP/capita, PPP$ inflation-adjusted\") +\n  annotate(\"text\", x=500, y=95, hjust=0.5, vjust=-1.5, size=3, angle=90, label=\"years\")\np\n\n\n\nData\nThe chart is a type of scatterplot, with one point per country, and colored by continent.\nThe novelty here is that every dot is scaled up to represent the population size.\nAlso, we will add some transparency to the points.\n\n\np <- p + geom_point(aes(color=continent, size=pop), alpha=0.7)\np\n\n\n\nWe are close, but a couple of adjustments are required.\nLet’s add a black line around the points (see shape 21),\nand adjust the range of the bubbles a bit.\n\n\np <- p + geom_point(aes(size=pop), color=\"#333333\", shape=21) +\n  scale_size_area(max_size=25)\np\n\n\n\nFinally, let’s replicate the same color scale.\nWe need to provide them in the same order as the factor levels:\n\n\nlevels(gapminder$continent)\n\n[1] \"Africa\"   \"Americas\" \"Europe\"   \"Asia\"    \n\nTherefore, from the web, page we obtain:\nAfrica: Blue rgb(0, 213, 233) -> #00d5e9\nAmericas: Green rgb(127, 235, 0) -> #7feb00\nEurope: Yellow rgb(255, 231, 0) -> #ffe700\nAsia: Red rgb(255, 88, 114) -> #ff5872\n\n\nccolors <- c(\"#00d5e9\", \"#7feb00\", \"#ffe700\", \"#ff5872\")\np <- p + scale_color_manual(values=ccolors)\np\n\n\n\nLegend\nThis chart has an interesting legend:\nit takes advantage from the fact that continents are easily recognizable to use a map as a legend.\nLet’s replicate it separately using data from ggplot2::map_data.\n\n\nworld <- map_data(\"world\")\nglimpse(world)\n\nRows: 99,338\nColumns: 6\n$ long      <dbl> -69.89912, -69.89571, -69.94219, -70.00415, -70.06…\n$ lat       <dbl> 12.45200, 12.42300, 12.43853, 12.50049, 12.54697, …\n$ group     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2,…\n$ order     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16,…\n$ region    <chr> \"Aruba\", \"Aruba\", \"Aruba\", \"Aruba\", \"Aruba\", \"Arub…\n$ subregion <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\nThis data needs to be tweaked a little bit. We need to:\nFilter out the Antarctica region.\nAdd a new column continent with the help of the countrycode package.\nInclude Oceania into Asia.\nDrop any missing values for continent.\n\n\nworld <- world %>%\n  filter(region != \"Antarctica\") %>%\n  mutate(continent = countrycode::countrycode(\n    sourcevar=region, origin=\"country.name\", destination=\"continent\")) %>%\n  mutate(continent = fct_other(continent, drop=\"Oceania\", other_level=\"Asia\")) %>%\n  drop_na(continent)\n\n\nNow, let’s create the map:\n\n\nlegend <- ggplot(world) +\n  aes(long, lat, group=group, map_id=region, fill=continent) +\n  geom_map(map=world) +\n  scale_fill_manual(values=ccolors) +\n  theme_void() + theme(legend.position=\"none\")\nlegend\n\n\n\nFinal result\nSingle year\nIn summary, so far we have\nBuild steps:\nset coordinates and axes, with custom breaks;\nset an appropriate theme and prevent the default legend from appearing;\nadded several annotations, including year, income levels and axis units;\nadded the data points and made several adjustments, including size and color;\ncreated a custom legend based on a simple colored world map.\nThere are several ways we can merge the main plot and the legend.\nIn this case, let’s add it as an inset with the custom annotation function.\nNote that, in contrast to the regular annotation function,\nthis one doesn’t seem to support logarithmic scales very well.\nAs a result, the user needs to provide the transformed values directly.\n\n\np <- p + annotation_custom(\n  ggplotGrob(legend), xmin=log10(16000), ymin=10, ymax=40)\np\n\n\n\nFinally, we can improve this static single-year visualization by adding some context,\ni.e. a title, a subtitle and a caption.\n\n\np + labs(\n  title = \"World Life Expectancy vs. Income in 2007\",\n  subtitle = paste(\n    \"African countries are still lagging behind in terms of general life\",\n    \"expectancy.\\nEuropean and American countries are the healthiest\",\n    \"and richest countries in the world.\"),\n  caption = \"Source: gapminder.org\"\n)\n\n\n\nMultiple years, static\nSo far, we covered the case for a single year.\nHow could we show the evolution, which is the point in this dataset?\nOf course we can define facets to plot all the years.\nIn the following chart,\ngginnards::delete_layers is used to remove the background year;\nwe switch to the whole dataset using the %+% operator;\ndata is faceted in two rows;\naxis labels are slightly rotated to make space for them.\nNote also that we need to manually scale down a bit the range of the bubbles\nto preserve more or less the previous aspect ratio.\n\n\ngginnards::delete_layers(p, match_type=\"GeomText\") %+% gapminder +\n  facet_wrap(\"year\", nrow=2) +\n  scale_size_area(max_size=7) +\n  theme(axis.text.x=element_text(angle=45, vjust=1, hjust=1))\n\n\n\nMultiple years, dynamic\nAnd we can of course animate it!\nWe can easily convert any ggplot2 chart to plotly using plotly::ggplotly,\nwhich produces interactive web-based charts.\nFurthermore, if we set the frame aesthetic, it is automatically detected,\nand an animation is added based on the corresponding variable.\n\n\nplotly::ggplotly(p %+% gapminder + aes(frame=year))\n\n\n\n\n\n\n",
    "preview": "projects/gapminder/gapminder_files/figure-html5/titled-1.png",
    "last_modified": "2022-10-07T12:58:42+02:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 936
  }
]
